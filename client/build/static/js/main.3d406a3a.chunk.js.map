{"version":3,"sources":["logo.svg","common/AppMenu.js","Login/HomePage.js","common/validate.js","Login/LoginPage.js","actions/loginActions.js","Login/ForgotPwd.js","Login/SignUpPage.js","App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["module","exports","AppMenu","state","Navbar","color","dark","expand","NavbarBrand","href","Nav","className","navbar","NavItem","NavLink","Component","HomePage","user","this","props","loggedInUser","fullName","React","connect","isValidLoginDetails","loginDetails","console","log","str","isValidEmailPwd","email","test","length","isValidPassword","password","confirmPwd","LoginPage","handleClick","button","login","me","queryParam","axios","get","then","response","data","showLogin","setState","catch","isValidPwd","loginUser","history","push","handleChange","component","target","name","value","Container","Row","Col","xs","Form","FormGroup","Label","for","Input","type","id","onChange","bind","placeholder","Badge","Button","onClick","withRouter","dispatch","payload","ForgotPwd","showNewPasswordSection","SignUpPage","isInValidLoginDetails","showText","signup","event","handleSubmit","preventDefault","url","method","error","showMsg","invalid","FormFeedback","App","path","exact","Boolean","window","location","hostname","match","logInDetails","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3d406a3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\nclass AppMenu extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand href=\"/\">Login</NavbarBrand>\r\n\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/games\">Games</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/others\">Other Information</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppMenu;\r\n","import React from \"react\";\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomePage extends React.Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <h3>Welcome {user.loggedInUser.fullName}!</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(HomePage);\r\n","export const isValidPassword = (str) => {\r\n  return str.length >= 8;\r\n};\r\n\r\nexport const isValidEmailAddress = (str) => {\r\n  const regex = /[^@]+@[^\\.]+\\..+/g;\r\n  return regex.test(str);\r\n};\r\n\r\nexport const isValidLoginDetails = (loginDetails) => {\r\n  console.log(loginDetails);\r\n  const isValidEmailPwd =\r\n    isValidEmailAddress(loginDetails.email) &&\r\n    isValidPassword(loginDetails.password);\r\n  return loginDetails.confirmPwd\r\n    ? isValidEmailPwd && loginDetails.confirmPwd === loginDetails.password\r\n    : isValidEmailPwd;\r\n};\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { loginUser } from \"../actions/loginActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  FormFeedback,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nimport HomePage from \"./HomePage\";\r\nimport \"./styles.css\";\r\nimport { isValidLoginDetails } from \"../common/validate\";\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isValidPwd: false,\r\n      isValidLoginDetails: false,\r\n      login: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  handleClick = (button) => {\r\n    const { login } = this.state;\r\n    const me = this;\r\n    const queryParam = \"email=\" + login.email + \"&&password=\" + login.password;\r\n\r\n    if (isValidLoginDetails(login)) {\r\n      axios\r\n        .get(\"/api/login?\" + queryParam)\r\n        .then((response) => {\r\n          !response.data[0]\r\n            ? this.setState({\r\n                isValidLoginDetails: true,\r\n              })\r\n            : me.showLogin(response.data[0]);\r\n        })\r\n        .catch(() => {\r\n          me.setState({\r\n            isValidLoginDetails: true,\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        isValidPwd: true,\r\n      });\r\n    }\r\n  };\r\n  showLogin = (data) => {\r\n    this.props.loginUser(data);\r\n    this.props.history.push(\"/home\");\r\n  };\r\n  handleChange = (component) => {\r\n    let { login } = this.state;\r\n    login[component.target.name] = component.target.value;\r\n    this.setState({\r\n      login: login,\r\n      isValidPwd: false,\r\n      isValidLoginDetails: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isValidPwd, isValidLoginDetails } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Login</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    <FormGroup>\r\n                      <Label for=\"email\">Email</Label>\r\n                      <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={this.handleChange.bind(this)}\r\n                        placeholder=\"Enter email\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"password\">Password</Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        onChange={this.handleChange.bind(this)}\r\n                        placeholder=\"Enter Password\"\r\n                      />\r\n                    </FormGroup>\r\n                    {isValidPwd && (\r\n                      <Badge xs=\"1\" color=\"danger\">\r\n                        <h4>Incorrect Email or Password..</h4>\r\n                      </Badge>\r\n                    )}\r\n                    <FormGroup>\r\n                      <a href=\"/forgotPwd\">Forgot Password? </a>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <a href=\"/signup\">Sign Up </a>\r\n                      <Button onClick={this.handleClick.bind(this)}>\r\n                        Submit\r\n                      </Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col>\r\n              {isValidLoginDetails && (\r\n                <div className=\"headersection\">\r\n                  <Badge xs=\"3\" color=\"danger\">\r\n                    <h4>Incorrect Email or Password..</h4>\r\n                  </Badge>\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginUser: (name) => {\r\n      dispatch(loginUser(name));\r\n    },\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(\"\", mapDispatchToProps)(LoginPage));\r\n","export const loginUser = (loggedInUser) => {\r\n  return { type: \"LOGGED_IN_USER\", payload: loggedInUser };\r\n};\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  FormFeedback,\r\n  Badge,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nimport \"./styles.css\";\r\nimport { isValidLoginDetails } from \"../common/validate\";\r\n\r\nclass ForgotPwd extends React.Component {\r\n  state = {\r\n    showNewPasswordSection: false,\r\n    email: \"\",\r\n    login: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  };\r\n  handleClick = (button) => {\r\n    const { login } = this.state;\r\n    const me = this;\r\n\r\n    if (!login.email) {\r\n      axios\r\n        .get(\"/api/login?email=\" + login.email)\r\n        .then((response) => {\r\n          me.setState({\r\n            showNewPasswordSection: true,\r\n            email: login.email,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          console.log(\"Some error occurred\");\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  handleChange = (component) => {\r\n    let { login } = this.state;\r\n    login[component.target.name] = component.target.value;\r\n    this.setState({\r\n      login: login,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { showNewPasswordSection, email } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Forgot Password</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    {!showNewPasswordSection && (\r\n                      <div>\r\n                        <FormGroup>\r\n                          <Label for=\"email\">\r\n                            Enter your email to get started\r\n                          </Label>\r\n                          <Input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Enter email address\"\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {showNewPasswordSection && (\r\n                      <div>\r\n                        <FormGroup>\r\n                          <Badge color=\"primary\">{email}</Badge>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"password\">\r\n                            Choose a password with atleast 8 characters\r\n                          </Label>\r\n                          <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Enter password\"\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"confirmPwd\">Confirm password</Label>\r\n                          <Input\r\n                            type=\"confirmPwd\"\r\n                            name=\"confirmPwd\"\r\n                            id=\"confirmPwd\"\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Enter password again\"\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <FormGroup>\r\n                      <Button onClick={this.handleClick.bind(this)}>\r\n                        Submit\r\n                      </Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPwd;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nimport { isValidLoginDetails } from \"../common/validate\";\r\nimport \"./styles.css\";\r\nclass SignUpPage extends React.Component {\r\n  state = {\r\n    isInValidLoginDetails: false,\r\n    showText: false,\r\n    signup: {\r\n      email: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n    },\r\n  };\r\n  handleChange = (event) => {\r\n    let { signup } = this.state;\r\n    signup[event.target.name] = event.target.value;\r\n    this.setState({\r\n      signup: signup,\r\n      isInValidLoginDetails: false,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { signup } = this.state;\r\n    const me = this;\r\n    if (isValidLoginDetails(signup)) {\r\n      axios({\r\n        url: \"/api/signup/\",\r\n        method: \"POST\",\r\n        data: signup,\r\n      })\r\n        .then((response) => {\r\n          console.log(\"Data saved\", response.data.error);\r\n          const showMsg = response.data.error ? \"error\" : \"success\";\r\n          me.setState({\r\n            showText: showMsg,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          console.log(\"Some error occurred\");\r\n        });\r\n    } else {\r\n      this.setState({\r\n        isInValidLoginDetails: true,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { isInValidLoginDetails, showText } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Sign Up</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    <FormGroup>\r\n                      <Label for=\"email\">Enter your email to get started</Label>\r\n                      <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        invalid={isInValidLoginDetails}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Enter email address\"\r\n                      />\r\n                      {isInValidLoginDetails && (\r\n                        <FormFeedback>Enter proper Email id</FormFeedback>\r\n                      )}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"fullName\">Enter your full name</Label>\r\n                      <Input\r\n                        type=\"fullName\"\r\n                        name=\"fullName\"\r\n                        id=\"fullName\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Enter fullName\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"password\">\r\n                        Choose a password with atleast 8 characters\r\n                      </Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        invalid={isInValidLoginDetails}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Enter password\"\r\n                      />\r\n                      {isInValidLoginDetails && (\r\n                        <FormFeedback>Enter proper passowrd</FormFeedback>\r\n                      )}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"confirmPwd\">Confirm password</Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"confirmPwd\"\r\n                        id=\"confirmPwd\"\r\n                        invalid={isInValidLoginDetails}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Enter password again\"\r\n                      />\r\n                      {isInValidLoginDetails && (\r\n                        <FormFeedback>should match passowrd</FormFeedback>\r\n                      )}\r\n                    </FormGroup>\r\n                    <Badge\r\n                      xs=\"1\"\r\n                      color={showText === \"error\" ? \"danger\" : \"success\"}\r\n                    >\r\n                      {showText && (\r\n                        <div>\r\n                          {showText === \"error\"\r\n                            ? \"Email Already present\"\r\n                            : \"Sign Up Successful\"}\r\n                        </div>\r\n                      )}\r\n                    </Badge>\r\n                    <br />\r\n                    <FormGroup>\r\n                      <Button onClick={this.handleSubmit}>Submit</Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LoginPage from \"./Login/LoginPage\";\nimport ForgotPwd from \"./Login/ForgotPwd\";\nimport SignUpPage from \"./Login/SignUpPage\";\nimport HomePage from \"./Login/HomePage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact={true} component={LoginPage} />\n          <Route path=\"/forgotPwd\" exact={true} component={ForgotPwd} />\n          <Route path=\"/signup\" exact={true} component={SignUpPage} />\n          <Route path=\"/home\" exact={true} component={HomePage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const logInDetails = {\r\n  loggedInUser: \"\",\r\n};\r\n\r\nconst reducer = (state = logInDetails, action) => {\r\n  if (action.type === \"LOGGED_IN_USER\") {\r\n    return {\r\n      ...state,\r\n      loggedInUser: action.payload,\r\n    };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers/reducer\";\nimport thunk from \"redux-thunk\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />{\" \"}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}